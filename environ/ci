#! /usr/bin/env bash

# TODO(tav):
# - Trap and handle failures properly.
# - Add further checks, e.g. linting, prettier, unit tests, etc.
# - Bail on typescript and test errors.
# - Enforce import restrictions in modules.
# - Ensure package.json dependency listing, fixed versioning, etc.
# - Speed up builds.

set -e -o pipefail

counter=0

function stage {
  ((counter++)) || true
  printf "\n\033[34;1mâž¡  $1  \033[90m[stage $counter] [running ${SECONDS}s]\033[0m\n\n"
}

stage "Pulling the latest lpg-services docker image"
docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
docker pull cshr/lpg-services-ui || true

stage "Installing the top-level dependencies"
npm install

stage "Linting the codebase"
npm run lint
npm run lint:webdriver

stage "Building the main src"
npm run build

stage "Running the unit tests"
npm test

stage "Building the new lpg-services docker image"
docker build --cache-from cshr/lpg-services-ui:latest -t cshr/lpg-services:${TRAVIS_COMMIT} .

stage "Pushing the lpg-services-ui ${TRAVIS_COMMIT} docker image"
docker tag cshr/lpg-services:${TRAVIS_COMMIT} cshr/lpg-services:latest
docker push cshr/lpg-services

stage "Installing ansible if necessary"
export PATH="`pwd`/pyhome/bin:${PATH}"
export PYTHONPATH="`pwd`/pyhome/lib/python/site-packages:${PYTHONPATH}"
export PYTHONPATH="`pwd`/pyhome/lib/python2.7/site-packages:${PYTHONPATH}"

PYTHONUSERBASE=pyhome pip install --user ansible==2.4.3.0

stage "Deploying to the dev environment"
./environ/deploy dev ${TRAVIS_COMMIT}

stage "Installing the wdio test dependencies"
cd test/webdriver
rm -f node_modules/extension node_modules/page node_modules/test
npm install

stage "Building the wdio test code"
npm run build

# Matt 16/05 - Skipping tests until identity service is deployed
# stage "Running the wdio tests"
# xvfb-run npm test

echo "Total run time: ${SECONDS}s"
